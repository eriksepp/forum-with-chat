		CREATE TABLE IF NOT EXISTS users (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			name TEXT NOT NULL UNIQUE,
			email TEXT NOT NULL UNIQUE,
			password TEXT NOT NULL,
			dateCreate TIMESTAMP NOT NULL,
			dateBirth TIMESTAMP NOT NULL,
			gender TEXT NOT NULL,    
			firstName TEXT NOT NULL,
			lastName TEXT NOT NULL
		);

		CREATE TABLE IF NOT EXISTS 'usersessions' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			userID INT NOT NULL,
			uuid TEXT NOT NULL UNIQUE,
			expirySession TIMESTAMP NOT NULL,
			agent TEXT,
			FOREIGN KEY (userID) REFERENCES users(id) ON DELETE CASCADE
		);
		
		CREATE TABLE IF NOT EXISTS 'posts_likes' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			userID INT NOT NULL,
			messageID INT NOT NULL,
			like BOOL NOT NULL,
			UNIQUE (userID, messageID),
			FOREIGN KEY (userID) REFERENCES users(id) ON DELETE CASCADE,
			FOREIGN KEY (messageID) REFERENCES posts(id) ON DELETE CASCADE
		);
		
		CREATE TABLE IF NOT EXISTS 'comments_likes' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			userID INT NOT NULL,
			messageID INT NOT NULL,
			like BOOL NOT NULL,
			UNIQUE (userID, messageID),
			FOREIGN KEY (userID) REFERENCES users(id) ON DELETE CASCADE,
			FOREIGN KEY (messageID) REFERENCES posts(id) ON DELETE CASCADE
		);

		CREATE TABLE IF NOT EXISTS 'posts' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			theme TEXT NOT NULL DEFAULT ('(No theme)'),
			content TEXT NOT NULL,
			images TEXT, 
			authorID INT NOT NULL,
			dateCreate TIMESTAMP NOT NULL,
			FOREIGN KEY (authorID) REFERENCES users(id) ON DELETE CASCADE
		);

		CREATE TABLE IF NOT EXISTS 'comments' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			content TEXT NOT NULL,  
			images TEXT, 
			authorID INT NOT NULL,
			dateCreate TIMESTAMP NOT NULL,
			postID INT NOT NULL,
			FOREIGN KEY (authorID) REFERENCES users(id) ON DELETE CASCADE,
			FOREIGN KEY (postID) REFERENCES posts(id) ON DELETE CASCADE
		);
		
		CREATE TABLE IF NOT EXISTS 'categories' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			name TEXT NOT NULL 
		);
		
		CREATE TABLE IF NOT EXISTS 'post_categories' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			categoryID INT NOT NULL, 
			postID INT NOT NULL,
			UNIQUE (categoryID, postID),
			FOREIGN KEY (categoryID) REFERENCES categories(id) ON DELETE CASCADE,
			FOREIGN KEY (postID) REFERENCES posts(id) ON DELETE CASCADE
		);

		CREATE TABLE IF NOT EXISTS 'chats' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			name TEXT NOT NULL,
			type INTEGER NOT NULL,
			UNIQUE (name, type)
		);

		CREATE TABLE IF NOT EXISTS 'chat_members' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			chatID INTEGER NOT NULL,
			userID INTEGER NOT NULL,
			UNIQUE (chatID, userID),
			FOREIGN KEY (chatID) REFERENCES chats(id) ON DELETE CASCADE,
			FOREIGN KEY (userID) REFERENCES users(id) ON DELETE CASCADE
		);

		CREATE TABLE IF NOT EXISTS 'chat_messages' (
			id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
			content TEXT NOT NULL,  
			images TEXT, 
			chat_membersID INT NOT NULL,
			dateCreate TIMESTAMP NOT NULL,
			FOREIGN KEY (chat_membersID) REFERENCES chat_members(id) ON DELETE CASCADE
		);
		
		INSERT INTO users (name,email,password, dateCreate, dateBirth, gender, firstName, lastName) VALUES (?,?,?,?,?,?,?,?);
		INSERT INTO categories (name) VALUES (?), (?), (?), (?);
		
        SELECT auth_user_add('webuser', 'webuser', 0);